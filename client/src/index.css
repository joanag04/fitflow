/* index.css */
/* Prevent scrolling when mobile menu is open */
body.no-scroll {
  overflow: hidden;
  height: 100%;
  width: 100%;
  position: fixed;
  overflow-y: scroll;
}

/* Smooth scrolling for the whole app */
html {
  scroll-behavior: smooth;
}

/* Focus styles for better accessibility */
:focus-visible {
  outline: 2px solid var(--primary-color);
  outline-offset: 2px;
  border-radius: 2px;
}

/* Skip to main content link for keyboard users */
.skip-to-content {
  position: absolute;
  left: -9999px;
  z-index: 999;
  padding: 1em;
  background-color: var(--surface-color);
  color: var(--text-color);
  opacity: 0;
}

.skip-to-content:focus {
  left: 50%;
  transform: translateX(-50%);
  opacity: 1;
}

:root {
  --primary-color: #4a90e2; /* A nice blue */
  --secondary-color: #50e3c2; /* A complementary teal/mint */
  --text-color: #333;
  --light-text-color: #fff;
  --background-color: #f7f9fc; /* A very light grey-blue */
  --surface-color: #fff; /* For cards, navbars etc. */
  --border-color: #e0e0e0;
  --error-color: #e74c3c;

  /* Variables used by component-specific styles (LoginPage, SignupPage, etc.) */
  --color-primary: #007bff; /* Explicitly define for login button */
  --color-primary-dark: color-mix(in srgb, var(--color-primary) 85%, black);
  --color-primary-rgb: 0,123,255; /* For focus shadow on login page inputs */

  --color-success: #28a745; /* For signup button */
  --color-success-dark: color-mix(in srgb, var(--color-success) 85%, black);
  
  --color-danger: var(--error-color); /* Alias for consistency */
  --color-danger-light: #f8d7da; /* Used in form error messages */
  --color-danger-dark: #721c24;  /* Used in form error messages */

  /* General component styling variables used with fallbacks previously */
  --background-color-light: #f4f7f6;
  /* --color-surface is aliased from --surface-color if LoginPage/SignupPage use it */
  /* --color-border is aliased from --border-color if LoginPage/SignupPage use it */
  --color-text-secondary: #555;
  --border-radius-large: 10px;
  --border-radius-medium: 7px;
  --shadow-medium: 0 4px 12px rgba(0, 0, 0, 0.15);

  --font-family-sans: 'Roboto', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;
  --font-family-monospace: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;

  --border-radius: 4px;
  --box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  /* --shadow-medium is defined above with component-specific variables */
}

/* Container class */
.container {
  width: 100%;
  padding-right: var(--spacing-md);
  padding-left: var(--spacing-md);
  margin-right: auto;
  margin-left: auto;
}

/* Responsive container widths */
@media (min-width: 576px) {
  .container {
    max-width: var(--container-sm);
  }
}

@media (min-width: 768px) {
  .container {
    max-width: var(--container-md);
  }
}

@media (min-width: 992px) {
  .container {
    max-width: var(--container-lg);
  }
}

@media (min-width: 1200px) {
  .container {
    max-width: var(--container-xl);
  }
}

@media (min-width: 1400px) {
  .container {
    max-width: var(--container-xxl);
  }
}

/* Utility classes for responsive display */
.d-block { display: block !important; }
.d-inline { display: inline !important; }
.d-inline-block { display: inline-block !important; }
.d-flex { display: flex !important; }
.d-inline-flex { display: inline-flex !important; }
.d-none { display: none !important; }

/* Responsive display utilities */
@media (min-width: 576px) {
  .d-sm-block { display: block !important; }
  .d-sm-inline { display: inline !important; }
  .d-sm-inline-block { display: inline-block !important; }
  .d-sm-flex { display: flex !important; }
  .d-sm-inline-flex { display: inline-flex !important; }
  .d-sm-none { display: none !important; }
}

@media (min-width: 768px) {
  .d-md-block { display: block !important; }
  .d-md-inline { display: inline !important; }
  .d-md-inline-block { display: inline-block !important; }
  .d-md-flex { display: flex !important; }
  .d-md-inline-flex { display: inline-flex !important; }
  .d-md-none { display: none !important; }
}

@media (min-width: 992px) {
  .d-lg-block { display: block !important; }
  .d-lg-inline { display: inline !important; }
  .d-lg-inline-block { display: inline-block !important; }
  .d-lg-flex { display: flex !important; }
  .d-lg-inline-flex { display: inline-flex !important; }
  .d-lg-none { display: none !important; }
}

/* Responsive spacing utilities */
.mx-auto {
  margin-right: auto !important;
  margin-left: auto !important;
}

/* Responsive text alignment */
.text-center { text-align: center !important; }
.text-left { text-align: left !important; }
.text-right { text-align: right !important; }

@media (min-width: 768px) {
  .text-md-left { text-align: left !important; }
  .text-md-right { text-align: right !important; }
  .text-md-center { text-align: center !important; }
}

/* Responsive flex utilities */
.flex-column { flex-direction: column !important; }
.flex-row { flex-direction: row !important; }
.flex-wrap { flex-wrap: wrap !important; }
.flex-nowrap { flex-wrap: nowrap !important; }
.justify-content-start { justify-content: flex-start !important; }
.justify-content-end { justify-content: flex-end !important; }
.justify-content-center { justify-content: center !important; }
.justify-content-between { justify-content: space-between !important; }
.align-items-start { align-items: flex-start !important; }
.align-items-end { align-items: flex-end !important; }
.align-items-center { align-items: center !important; }
.align-items-baseline { align-items: baseline !important; }
.align-items-stretch { align-items: stretch !important; }

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  font-size: 16px; /* Base font size */
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
}

body {
  font-family: var(--font-family-sans);
  background-color: var(--background-color);
  color: var(--text-color);
  min-height: 100vh;
  display: flex; /* Helps with centering content if App itself is a flex item */
  flex-direction: column; /* Allows footer to stick to bottom if body is main container */
}

#root {
  flex-grow: 1; /* Ensures the React app takes up available space */
  display: flex;
  flex-direction: column;
}

a {
  color: var(--primary-color);
  text-decoration: none;
  transition: color 0.2s ease-in-out;
}

a:hover {
  color: color-mix(in srgb, var(--primary-color) 70%, black);
  text-decoration: underline;
}

h1, h2, h3, h4, h5, h6 {
  margin-bottom: 0.75rem;
  font-weight: 600; /* Slightly bolder headings */
  line-height: 1.3;
}

img {
  max-width: 100%;
  height: auto;
  display: block;
}

/* Basic button styling - can be overridden by component-specific styles */
button {
  font-family: var(--font-family-sans);
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  border-radius: var(--border-radius);
  border: 1px solid transparent;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out, border-color 0.2s ease-in-out;
  background-color: var(--primary-color);
  color: var(--light-text-color);
}

button:hover {
  background-color: color-mix(in srgb, var(--primary-color) 85%, black);
}

button:focus, 
button:focus-visible {
  outline: 3px auto var(--primary-color);
  outline-offset: 2px;
}

/* Remove default list styling */
ul,
ol {
  list-style: none;
}

/* Forms basic styling */
input, 
textarea,
select {
  font-family: var(--font-family-sans);
  padding: 0.5rem 0.75rem;
  border: 1px solid var(--border-color);
  border-radius: var(--border-radius);
  font-size: 1rem;
  transition: border-color 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
}

input:focus,
textarea:focus,
select:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px color-mix(in srgb, var(--primary-color) 30%, transparent);
}
